    void setup_views() {
        Log.d("gutendroid", "setup_views");
        inflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
        home.set_response_callback(size_change_callback);
        home_scroll_view.setOnTouchListener(new View.OnTouchListener() {
            public boolean onTouch(View v, MotionEvent event) {
                if (event.getAction() == MotionEvent.ACTION_MOVE && book_view_open) {
                    return true;
                }
                return false;
            }
        });

        String[] headers = new String[num_primary_nav_menus];
        home_nav = new LinearLayout[num_primary_nav_menus];
        home_nav_headers = new TextView[num_primary_nav_menus];
        headers[0] = "Browse: By Title";
        headers[1] = "By Author";
        headers[2] = "By Category";
        headers[3] = "By Year";
        headers[4] = "Settings";
        headers[5] = "Donate";

        for (int i=0; i < headers.length; i++) {
            home_nav[i] = (LinearLayout)inflater.inflate(R.layout.home_menu_row, null).findViewById(R.id.home_menu_row_holder);
            home_nav_headers[i] = (TextView)home_nav[i].findViewById(R.id.home_menu_row_header);
            home_nav_headers[i].setText(headers[i]);
            home_scroll_view.addView(home_nav[i]);
            final int f_i = i;
            home_nav[i].setOnClickListener(new OnClickListener() {
                public void onClick(View v) {
                    expand_primary_nav(f_i);
                }
            });
        }
        browse_title = (LinearLayout)inflater.inflate(R.layout.browse_titles, null);
        browse_titles_list = (ListView)browse_title.findViewById(R.id.browse_titles_list);
        browse_titles_list.setLayoutParams(fill_screen_params);
        browse_titles_list.setOnTouchListener(new View.OnTouchListener() {
            public boolean onTouch(View v, MotionEvent event) {
                if (event.getAction() == MotionEvent.ACTION_MOVE && book_view_open) {
                    return true;
                }
                return false;
            }
        });
        String[] titles = new String[100];
        for (int i=0; i < titles.length; i++) {
            titles[i] = "" + i;
        }
        Title_Adapter browse_titles_adapter = new Title_Adapter(context, titles);
        browse_titles_list.setAdapter(browse_titles_adapter);
        browse_titles_list.setOnItemClickListener(title_click);

        home_scroll_view.setOnTouchListener(new View.OnTouchListener() {
            public boolean onTouch(View v, MotionEvent event) {
                browse_titles_list.getParent().requestDisallowInterceptTouchEvent(false);
                return false;
            }
        });
        browse_titles_list.setOnTouchListener(new View.OnTouchListener() {
            public boolean onTouch(View v, MotionEvent event)
            {
                v.getParent().requestDisallowInterceptTouchEvent(true);
                return false;
            }
        });
    }